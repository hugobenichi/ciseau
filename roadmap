editor organization
===================

Ciseau relies on the assumptions that refreshing the whole terminal screen is
cheap enough that a good fps can be obtained that way.

This allows to organize the editor around this central loop:

render: _model -> ()
get_input: () -> _user_key_input
update: _user_key_input -> _model -> _model

(loop [model model_zero]
  (render model)
  (recur (update (get_input) model)))

All the state and information is in the immutable structure model.
update computes a new model to redraw. It may have io side effects when saving
files to disk for instance.

future optimisations/improvements:
  render could be updated to take both the new and previously drawn model,
  so that an efficient drawing diff could be computed to avoid redrawing the
  whole screen. This is important for remvoe terminal scenarios



features/impl
=============

minimum viable editor
  print a slice of a file to screen
  move cursor around, add exit code
  exit key
  scroll file drawn onto screen
  open and save files, dirty bit
  insert mode
  hook a repl/command for reloading core.clj
